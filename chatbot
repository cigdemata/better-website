import os
import openai
import gradio as gr

# Set your OpenAI API key
openai.api_key = "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"

# Define a dictionary of predefined plan options
plans = {
    "basic": {
        "data": "5 GB",
        "calls": "100 minutes",
        "messages": "100 messages",
        "price": "$10"
    },
    "standard": {
        "data": "10 GB",
        "calls": "Unlimited",
        "messages": "Unlimited",
        "price": "$20"
    },
    "premium": {
        "data": "20 GB",
        "calls": "Unlimited",
        "messages": "Unlimited",
        "price": "$30"
    }
}

# Define a list of questions to ask the customer
questions = [
    "How much data do you typically use per month? (e.g., 5GB, 10GB, or 20GB)",
    "Do you make a lot of calls? (yes/no)",
    "Do you send a lot of messages? (yes/no)",
    "What is your preferred budget range? (low, medium, high)"
]

# Define a list of greetings to welcome the user
greetings = [
    "Hello! How can I assist you today?",
    "Hi there! How may I help you?",
    "Welcome! How can I be of service?"
]

# Define a function to generate a response using OpenAI
def generate_response(prompt):
    response = openai.Completion.create(
        engine="davinci",
        prompt=prompt,
        max_tokens=100,
        temperature=0.6,
        n=1,
        stop=None
    )
    return response.choices[0].text.strip()

# Define a function to process the user input and generate a response
def get_response(message):
    # Check if the chatbot needs to ask a question
    if message == "start":
        return random.choice(greetings)

    # Gather user responses and generate a prompt
    user_responses = message.split(",")
    if len(user_responses) != 4:
        return random.choice(questions)

    prompt = f"""
        User preferences:
        - Data usage: {user_responses[0].strip()}
        - Calls: {user_responses[1].strip()}
        - Messages: {user_responses[2].strip()}
        - Budget range: {user_responses[3].strip()}

        Based on your preferences, I recommend the following plan: {plans['standard']}
    """

    # Generate the response using OpenAI
    response = generate_response(prompt)

    return response

# Create the Gradio interface
chatbot_interface = gr.Interface(
    fn=chatbot_response, 
    inputs=gr.inputs.Textbox(), 
    outputs=gr.outputs.Textbox(),
    live=True,
    capture_session=True

)
# Run the interface
chatbot_interface.launch(share=True)
